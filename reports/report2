# Team Report

## Goals

The first order of business is to create a very basic vscode extension that:
- Trivially modifies code (e.g. by adding `//` at the end of the line)
- Provides the option to modify highlighted code via system dropdown menu

Further steps towards milestone 1 include:
- Designing and planning the architecture for our application
- Designing major user flows and visuals
- Signing up for the GPT 3.5 API and trying to make our first call to it

## Progress

- VS Code project - started configuration
- Currently lacking functionality with basic methods
- Created a preliminary UI document with ideas of what the plugin will look like
- Created preliminary software architecture diagram with modular components (that people should be able to start with)
- Created simple prompts that generate usable print statements
- Learned more about GPT 3.5 API, its capabilities, and how to access/use it

## Plans

Add basic functionality to the current VS code extension - following the same structure:
- Trivially modifies code (e.g. by adding `//` at the end of the line)
- Provides the option to modify highlighted code via system dropdown menu

Further steps towards milestone 1:
- Sign up for the GPT 3.5 API and try to make our first call to it
- Create simple prompts that generate usable print statements

# Personal Reports

## Akash Prasad

### Goals
- Develop a very basic vs code extension - by October 20th 
- Set up the Chat GPT 3.5 API - get the key for making a call - by next week
- Try to make the first call into the API - by next week

### Progress
- Set up the vs extension using the extension - currently lacking functionality, but created the avenue to test the extension in development
- There’s likely some issue with how I set up the project - perhaps missing some library or not including a package that’s creating the erroneous response

### Plans
- Get functional vs code extension:
    - First get Hello World functional as a command
    - Test another library method (perhaps keybinding/ or something very simple)
- Further steps to milestone 1
    - If the AI API is set up, assist in making basic calls to that

## Tyler Gee

### Goals
- Design UI with basic use cases and flows - by end of weekend

### Progress
- Created preliminary design doc with Aisha. No visuals/prototypes (mainly because we have too many unknowns), but we have a much clearer idea of what the UI will be and the specific requirements/data we need to achieve it
- Created architecture design diagram

### Plans
- Create simple prompts that generate usable print statements
- Work on Print Statement Generator class, including Prompt Generator and Response Parser, leaving API Controller for someone else to implement

## Tyler R

### Goals

- Start designing the functions for some of our features.
- Start developing the high level concepts that will serve as the foundation for our extension.
- Start working on a rendering for the UI to develop the architecture of the system and how the user will interface with our system.

### Progress
This week I started to plan out some high level program details that can be coded into our extension once the coding starts. I did research more into the AI interfaces and set up an account to 
generate an API key that is necessary in order to integrate the AI APIs. I started making progress on the vs code APIs and started to develop a plan for calls to functions in vs code that may 
be useful or relevant to this project. 

### Plans
- Start working on a rendering for the UI to develop the architecture of the system and how the user will interface with our system.
- build a basic extension so that we can start developing the software and build upon a base functional program.
-develop the classes and modules and start planning the backend functions for the features we plan to integrate.
